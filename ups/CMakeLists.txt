execute_process (COMMAND bash ${CMAKE_CURRENT_LIST_DIR}/get_ups_root_details.sh -v
    OUTPUT_VARIABLE ROOT_UPS_VERSION RESULT_VARIABLE EXIT_STATUS OUTPUT_STRIP_TRAILING_WHITESPACE)

if(NOT EXIT_STATUS EQUAL 0)
  message(FATAL_ERROR "bash ${CMAKE_CURRENT_LIST_DIR}/get_ups_root_details.sh -v failed")
endif()

execute_process (COMMAND bash ${CMAKE_CURRENT_LIST_DIR}/get_ups_root_details.sh -q
    OUTPUT_VARIABLE ROOT_UPS_QUALIFIERS RESULT_VARIABLE EXIT_STATUS OUTPUT_STRIP_TRAILING_WHITESPACE)

if(NOT EXIT_STATUS EQUAL 0)
  message(FATAL_ERROR "bash ${CMAKE_CURRENT_LIST_DIR}/get_ups_root_details.sh -q failed")
endif()

execute_process (COMMAND ups flavor
    OUTPUT_VARIABLE UPS_BUILD_FLAVOR RESULT_VARIABLE EXIT_STATUS OUTPUT_STRIP_TRAILING_WHITESPACE)

if(NOT EXIT_STATUS EQUAL 0)
  message(FATAL_ERROR "ups flavor failed")
endif()

string(REPLACE "." "_" SRPROXY_UPS_VERSION "v${PROJECT_VERSION}")
SET(SRPROXY_UPS_VERSION ${SRPROXY_UPS_VERSION} PARENT_SCOPE)
string(REPLACE ":" ";" ROOT_UPS_QUALIFIER_LIST "${ROOT_UPS_QUALIFIERS}")
LIST(GET ROOT_UPS_QUALIFIER_LIST 0 SRPROXY_UPS_QUALIFIER)

message(STATUS "SRProxy UPS Details:")
message(STATUS "  SRPROXY_UPS_VERSION: ${SRPROXY_UPS_VERSION}")
message(STATUS "  SRPROXY_UPS_QUALIFIER: ${SRPROXY_UPS_QUALIFIER}")

message(STATUS "ROOT UPS Details:")
message(STATUS "  ROOT_UPS_VERSION: ${ROOT_UPS_VERSION}")
message(STATUS "  ROOT_UPS_QUALIFIERS: ${ROOT_UPS_QUALIFIERS}")

configure_file(srproxy.table.in ${CMAKE_CURRENT_BINARY_DIR}/srproxy.table @ONLY)
configure_file(version.in ${CMAKE_CURRENT_BINARY_DIR}/${UPS_BUILD_FLAVOR}_${SRPROXY_UPS_QUALIFIER} @ONLY)

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/srproxy.table DESTINATION ups)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${UPS_BUILD_FLAVOR}_${SRPROXY_UPS_QUALIFIER} 
  DESTINATION ${CMAKE_INSTALL_PREFIX}/../${SRPROXY_UPS_VERSION}.version)